@page "/optimize"
@rendermode InteractiveServer

<div class="optimize-container">
    <div class="optimize-header">
        <h3>文本优化</h3>
    </div>

    <div class="optimize-content">
        <div class="input-section">
            <div class="section-label">原始文本</div>
            <textarea @bind="Ques"
                      placeholder="请输入需要优化的文本内容..."
                      class="text-area"
                      @bind:event="oninput"></textarea>
            
            <div class="optimize-options">
                <div class="option-item">
                    <input type="checkbox" id="grammar" />
                    <label for="grammar">语法修正</label>
                </div>
                <div class="option-item">
                    <input type="checkbox" id="style" />
                    <label for="style">风格优化</label>
                </div>
                <div class="option-item">
                    <input type="checkbox" id="concise" />
                    <label for="concise">简洁表达</label>
                </div>
            </div>
            
            <button class="optimize-button" @onclick=ChooseLan>优化文本</button>
        </div>

        <div class="output-section">
            <div class="section-label">优化结果</div>
            <div class="result-content">
                <p class="placeholder-text">优化后的文本将显示在这里...</p>
            </div>
        </div>
    </div>
</div>

<style>
    .optimize-container {
        display: flex;
        flex-direction: column;
        height: 100%;
        background-color: #f9f9f9;
        border-radius: 10px;
        overflow: hidden;
    }

    .optimize-header {
        padding: 15px 20px;
        background-color: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .optimize-header h3 {
        margin: 0;
        color: #333;
    }

    .optimize-content {
        flex: 1;
        padding: 20px;
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    @@media (min-width: 768px) {
        .optimize-content {
            flex-direction: row;
        }
    }

    .input-section, .output-section {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .section-label {
        font-weight: bold;
        font-size: 1.1rem;
        color: #333;
    }

    .text-area {
        width: 100%;
        padding: 12px;
        border: 1px solid #ddd;
        border-radius: 5px;
        resize: vertical;
        min-height: 200px;
        font-family: inherit;
    }

    .optimize-options {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
    }

    .option-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .optimize-button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        align-self: flex-start;
    }

    .optimize-button:hover {
        background-color: #3d8b40;
    }

    .result-content {
        background-color: white;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        min-height: 200px;
        white-space: pre-wrap;
        line-height: 1.5;
    }

    .placeholder-text {
        color: #999;
        font-style: italic;
    }
</style>

@code {
    private string Ques = string.Empty;

    private void ChooseLan()
    {
        // 实现优化逻辑
    }
}
